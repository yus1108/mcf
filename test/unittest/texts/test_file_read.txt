#include <asm, "kernel32.lib">

typedef int32: dword;
typedef uint32: unsigned dword;
typedef address: unsigned qword;

typedef bool: byte;
let false: bool = 0;
let true: bool = 1;

#include <asm, "libcmt.lib">
extern func printf(format: unsigned qword, ...args) -> int32;

let foo: byte = 0;
func boo(void) -> byte { return 0; }

let arr: byte[] = { 0, 1, 2 };
let arr2: byte[5] = { 0 };

let intVal: int32 = 10;

main(void) -> void
{
	unused(foo, arr, arr2);
	let message: byte[] = "Hello, World! Value=%d\n";
	let i: dword = 0;
	while(i < 5)
	{
		printf(message as unsigned qword, intVal);
		i = i + 1;
	}
}